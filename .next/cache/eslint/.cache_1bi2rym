[{"/Users/wangshuo/Documents/study/my-project/pages/_app.tsx":"1","/Users/wangshuo/Documents/study/my-project/pages/api/hello.ts":"2","/Users/wangshuo/Documents/study/my-project/pages/index.tsx":"3","/Users/wangshuo/Documents/study/my-project/pages/EditModal.tsx":"4"},{"size":445,"mtime":1685439146694,"results":"5","hashOfConfig":"6"},{"size":307,"mtime":1685348482509,"results":"7","hashOfConfig":"6"},{"size":3176,"mtime":1685417465197,"results":"8","hashOfConfig":"6"},{"size":2208,"mtime":1685417499065,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8kaqd0",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/wangshuo/Documents/study/my-project/pages/_app.tsx",[],[],"/Users/wangshuo/Documents/study/my-project/pages/api/hello.ts",[],[],"/Users/wangshuo/Documents/study/my-project/pages/index.tsx",["24"],[],"import { useState, useEffect } from \"react\";\nimport { Table, Form, Input, Button, message } from \"antd\";\nimport AV from \"leancloud-storage\";\nimport EditModal from \"./EditModal\";\ninterface Record {\n  id: string;\n}\nexport default function Home() {\n  const [form] = Form.useForm();\n  const [dataList, setDataList] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [recordId, setRecordId] = useState(\"\");\n\n  const columns = [\n    {\n      dataIndex: \"id\",\n      title: \"ID\",\n      width: 90,\n    },\n    {\n      dataIndex: \"name\",\n      title: \"名字\",\n    },\n    {\n      dataIndex: \"nick\",\n      title: \"昵称\",\n    },\n    {\n      dataIndex: \"opt\",\n      title: \"操作\",\n      render: (text: any, { id }: Record) => (\n        <>\n          <Button type=\"link\" onClick={() => handleEdit(id)}>\n            编辑\n          </Button>\n          <Button type=\"link\" danger onClick={() => handleDelete(id)}>\n            删除\n          </Button>\n        </>\n      ),\n    },\n  ];\n  const handleDelete = (id: string) => {\n    const todo = AV.Object.createWithoutData(\"TestObject\", id);\n    todo.destroy();\n    message.success(\"删除成功\");\n    handleLoadList();\n  };\n\n  const handleEdit = (id: string) => {\n    setVisible(true);\n    setRecordId(id);\n  };\n  const handleLoadList = () => {\n    setTimeout(() => {\n      const query = new AV.Query(\"TestObject\");\n      query.find().then((todo) => {\n        setDataList(formatData(todo));\n      });\n    }, 0);\n  };\n  useEffect(() => {\n    handleLoadList();\n  }, []);\n  const formatData = (todoData:any) => {\n    const data = todoData.map((i: any) => {\n      return {\n        ...i._serverData,\n        id: i.id,\n      };\n    });\n    return data;\n  };\n  const handleSearch = (values: any) => {\n    form.validateFields().then(() => {\n      const query = new AV.Query(\"TestObject\");\n      if (values.name) {\n        query.equalTo(\"name\", values.name || \"\");\n      }\n      if (values.nick) {\n        query.equalTo(\"nick\", values.nick || \"\");\n      }\n      // query.equalTo(\"nick\", values.nick || '');\n      query.find().then((students) => {\n        setDataList(formatData(students));\n        console.log(students, 123312);\n        // students 是包含满足条件的 Student 对象的数组\n      });\n    });\n  };\n  return (\n    <div>\n      <Form\n        form={form}\n        layout=\"inline\"\n        onFinish={handleSearch}\n        style={{ margin: 20 }}\n      >\n        <Form.Item name=\"name\" label=\"姓名\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"nick\" label=\"昵称\">\n          <Input />\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: 10 }}>\n          搜索\n        </Button>\n        <Button htmlType=\"reset\" style={{ marginRight: 10 }}>\n          清除\n        </Button>\n        <Button type=\"primary\" onClick={() => setVisible(true)}>\n          新增\n        </Button>\n      </Form>\n      {visible && (\n        <EditModal\n          recordId={recordId}\n          onSubmit={handleLoadList}\n          onCancel={() => setVisible(false)}\n        />\n      )}\n\n      <Table rowKey=\"id\" columns={columns} dataSource={dataList} />\n    </div>\n  );\n}\n","/Users/wangshuo/Documents/study/my-project/pages/EditModal.tsx",["25"],[],"import React, { useEffect, useState } from \"react\";\nimport { Modal, Form, Input, Button, message } from \"antd\";\nimport AV from \"leancloud-storage\";\ninterface Iprops {\n  onSubmit: () => void\n  onCancel:() => void\n  recordId: string\n}\n\ninterface resDta {\n  _serverData: {}\n}\n\nfunction EditModal({ onSubmit, onCancel, recordId }: Iprops) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    if (recordId) {\n      const query = new AV.Query(\"TestObject\");\n      query.get(recordId).then((res:any) => {\n        console.log(res, 123);\n        form.setFieldsValue({ ...res._serverData });\n      });\n    }\n  }, [recordId]);\n  const handleSubmit = (values: any) => {\n    // 创建 TestObject 表对象，并设置 name 字段\n    const TestObject = AV.Object.extend(\"TestObject\");\n    const testObject = new TestObject();\n    form.validateFields().then(async () => {\n      testObject.set(\"name\", values.name);\n      testObject.set(\"nick\", values.nick);\n      // 将对象保存到 LeanCloud\n\n      if (recordId) {\n        const todo = AV.Object.createWithoutData(\"TestObject\", recordId);\n        todo.set(\"name\", values.name);\n        todo.set(\"nick\", values.nick);\n        todo.save();\n        form.resetFields();\n        message.success(\"编辑成功\");\n        return;\n      }\n      await testObject.save().then(\n        (testObject) => {\n          // 成功保存之后，执行其他逻辑\n          console.log(`保存成功。objectId：${testObject.id}`);\n          message.success(\"新增成功\");\n          form.resetFields();\n        },\n        (error) => {\n          // 异常处理\n        }\n      );\n    });\n    onSubmit();\n    onCancel?.();\n  };\n  const handleCancel = () => {\n    form.resetFields();\n    onCancel?.();\n  };\n  return (\n    <Modal\n      open={true}\n      title=\"新增数据\"\n      onOk={form.submit}\n      onCancel={handleCancel}\n    >\n      <Form form={form} onFinish={handleSubmit}>\n        <Form.Item name=\"name\" label=\"姓名\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"nick\" label=\"昵称\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default EditModal;\n",{"ruleId":"26","severity":1,"message":"27","line":64,"column":6,"nodeType":"28","endLine":64,"endColumn":8,"suggestions":"29"},{"ruleId":"26","severity":1,"message":"30","line":24,"column":6,"nodeType":"28","endLine":24,"endColumn":16,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleLoadList'. Either include it or remove the dependency array.","ArrayExpression",["32"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["33"],{"desc":"34","fix":"35"},{"desc":"36","fix":"37"},"Update the dependencies array to be: [handleLoadList]",{"range":"38","text":"39"},"Update the dependencies array to be: [form, recordId]",{"range":"40","text":"41"},[1495,1497],"[handleLoadList]",[609,619],"[form, recordId]"]